//
//  PressureStyleKit.swift
//  ProjectName
//
//  Created by AuthorName on 9/4/14.
//  Copyright (c) 2014 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class PressureStyleKit : NSObject {

    //// Drawing Methods

    public class func drawGauge(pressure: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let strokeColor = UIColor(red: 0.437, green: 0.437, blue: 0.437, alpha: 1.000)
        let highPressureColor = UIColor(red: 0.800, green: 0.320, blue: 0.320, alpha: 1.000)
        let lowPressureColor = UIColor(red: 0.652, green: 0.800, blue: 0.320, alpha: 1.000)

        //// Variable Declarations
        let angle = -240 * pressure
        let limitingColor = pressure > 0.7 ? highPressureColor : lowPressureColor

        //// Outer Frame Drawing
        var outerFramePath = UIBezierPath(ovalInRect: CGRectMake(124, 42, 100, 100))
        UIColor.whiteColor().setFill()
        outerFramePath.fill()
        strokeColor.setStroke()
        outerFramePath.lineWidth = 2
        outerFramePath.stroke()


        //// Scale Frame Drawing
        var scaleFramePath = UIBezierPath()
        scaleFramePath.moveToPoint(CGPointMake(138.49, 112.5))
        scaleFramePath.addCurveToPoint(CGPointMake(153.5, 56.49), controlPoint1: CGPointMake(127.17, 92.89), controlPoint2: CGPointMake(133.89, 67.81))
        scaleFramePath.addCurveToPoint(CGPointMake(209.51, 71.5), controlPoint1: CGPointMake(173.11, 45.17), controlPoint2: CGPointMake(198.19, 51.89))
        scaleFramePath.addCurveToPoint(CGPointMake(209.51, 112.5), controlPoint1: CGPointMake(216.83, 84.19), controlPoint2: CGPointMake(216.83, 99.81))
        scaleFramePath.addLineToPoint(CGPointMake(197.38, 105.5))
        scaleFramePath.addCurveToPoint(CGPointMake(197.38, 78.5), controlPoint1: CGPointMake(202.21, 97.15), controlPoint2: CGPointMake(202.21, 86.85))
        scaleFramePath.addCurveToPoint(CGPointMake(160.5, 68.62), controlPoint1: CGPointMake(189.93, 65.59), controlPoint2: CGPointMake(173.41, 61.16))
        scaleFramePath.addCurveToPoint(CGPointMake(150.62, 105.5), controlPoint1: CGPointMake(147.59, 76.07), controlPoint2: CGPointMake(143.16, 92.59))
        scaleFramePath.addLineToPoint(CGPointMake(138.49, 112.5))
        scaleFramePath.closePath()
        strokeColor.setStroke()
        scaleFramePath.lineWidth = 2
        scaleFramePath.stroke()


        //// Display Drawing
        var displayPath = UIBezierPath()
        displayPath.moveToPoint(CGPointMake(190.02, 129.74))
        displayPath.addCurveToPoint(CGPointMake(157.98, 129.74), controlPoint1: CGPointMake(179.78, 134.09), controlPoint2: CGPointMake(168.22, 134.09))
        displayPath.addLineToPoint(CGPointMake(160.72, 123.3))
        displayPath.addCurveToPoint(CGPointMake(187.28, 123.3), controlPoint1: CGPointMake(169.21, 126.9), controlPoint2: CGPointMake(178.79, 126.9))
        displayPath.addLineToPoint(CGPointMake(190.02, 129.74))
        displayPath.closePath()
        limitingColor.setFill()
        displayPath.fill()
        strokeColor.setStroke()
        displayPath.lineWidth = 2
        displayPath.stroke()


        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(174, 58))
        bezierPath.addLineToPoint(CGPointMake(174, 51))
        bezierPath.moveToPoint(CGPointMake(133, 92))
        bezierPath.addLineToPoint(CGPointMake(140, 92))
        bezierPath.moveToPoint(CGPointMake(208, 92))
        bezierPath.addLineToPoint(CGPointMake(215, 92))
        bezierPath.moveToPoint(CGPointMake(198.04, 67.96))
        bezierPath.addLineToPoint(CGPointMake(202.99, 63.01))
        bezierPath.moveToPoint(CGPointMake(145.01, 63.01))
        bezierPath.addLineToPoint(CGPointMake(149.96, 67.96))
        bezierPath.moveToPoint(CGPointMake(205.41, 78.99))
        bezierPath.addLineToPoint(CGPointMake(211.88, 76.31))
        bezierPath.moveToPoint(CGPointMake(136.12, 76.31))
        bezierPath.addLineToPoint(CGPointMake(142.59, 78.99))
        bezierPath.moveToPoint(CGPointMake(158.31, 54.12))
        bezierPath.addLineToPoint(CGPointMake(160.99, 60.59))
        bezierPath.moveToPoint(CGPointMake(187.01, 123.41))
        bezierPath.addLineToPoint(CGPointMake(189.69, 129.88))
        bezierPath.moveToPoint(CGPointMake(189.69, 54.12))
        bezierPath.addLineToPoint(CGPointMake(187.01, 60.59))
        bezierPath.moveToPoint(CGPointMake(160.99, 123.41))
        bezierPath.addLineToPoint(CGPointMake(158.31, 129.88))
        strokeColor.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.stroke()


        //// Arrow Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 174, 92)
        CGContextRotateCTM(context, -(angle + 120) * CGFloat(M_PI) / 180)

        var arrowPath = UIBezierPath()
        arrowPath.moveToPoint(CGPointMake(-4, 14))
        arrowPath.addLineToPoint(CGPointMake(-4, 5))
        arrowPath.addLineToPoint(CGPointMake(-3, -5))
        arrowPath.addLineToPoint(CGPointMake(-3, -33))
        arrowPath.addLineToPoint(CGPointMake(0, -37))
        arrowPath.addLineToPoint(CGPointMake(3, -33))
        arrowPath.addLineToPoint(CGPointMake(3, -5))
        arrowPath.addLineToPoint(CGPointMake(4, 5))
        arrowPath.addLineToPoint(CGPointMake(4, 14))
        arrowPath.addLineToPoint(CGPointMake(-4, 14))
        arrowPath.closePath()
        arrowPath.lineJoinStyle = kCGLineJoinRound;

        strokeColor.setFill()
        arrowPath.fill()
        strokeColor.setStroke()
        arrowPath.lineWidth = 2
        arrowPath.stroke()

        CGContextRestoreGState(context)


        //// Center Oval Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 174, 92)

        var centerOvalPath = UIBezierPath(ovalInRect: CGRectMake(-6, -6, 12, 12))
        UIColor.whiteColor().setFill()
        centerOvalPath.fill()
        strokeColor.setStroke()
        centerOvalPath.lineWidth = 2
        centerOvalPath.stroke()

        CGContextRestoreGState(context)


        //// LimitOval Drawing
        var limitOvalPath = UIBezierPath(ovalInRect: CGRectMake(204.68, 58.4, 3, 3))
        UIColor.whiteColor().setFill()
        limitOvalPath.fill()
        strokeColor.setStroke()
        limitOvalPath.lineWidth = 2
        limitOvalPath.stroke()
    }

}

@objc protocol StyleKitSettableImage {
    var image: UIImage! { get set }
}

@objc protocol StyleKitSettableSelectedImage {
    var selectedImage: UIImage! { get set }
}
